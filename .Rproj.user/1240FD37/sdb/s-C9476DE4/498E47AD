{
    "contents" : "# summary\nload.original.data <- function(dataID) {\n  dat <- simulated.data.for.id(dataID)\n  nMut <- length(dat$mutPrevalence)\n  data.frame(id=1:nMut, prev=as.vector(dat$mutPrevalence))\n}\n\nestimatePointClustering <- function(expPath, MCMCOptions=list(thinning=10, burnIn=100)) {\n  filePath <- file.path(expPath, 'clust-trace.csv')\n  clust <- read.table(filePath, stringsAsFactors=F)\n  step <- MCMCOptions$thinning\n  clust <- clust[seq(MCMCOptions$burnIn + 1, nrow(clust), by=step), ]\n  # remove na at the end with a warning\n  if (any(is.na(clust))) {\n    print('warning - there are NA entries in the trace. Maybe an early finish?')\n    clust <- na.omit(clust)\n  }\n  psm <- comp.psm(as.matrix(clust))\n  tempMat <- diag(ncol(clust))\n  if (all(psm == tempMat))  {\n    mpear <- maxpear(psm, method='avg')\n    mpear$cl <- as.matrix(t(data.frame(best=mpear$cl, avg=mpear$cl, comp=mpear$cl, draws=mpear$cl)))\n  } else {\n    mpear <- maxpear(psm, method='all', cls.draw = as.matrix(clust))\n  }\n  mpear$cl\n}\n\n\nestimatePointPhi <- function(expPath, MCMCOptions=list(thinning=10, burnIn=100)) {\n  filePath <- file.path(expPath, 'phi-trace.csv')\n  phi <- read.table(filePath)\n  phi <- phi[-(1:(MCMCOptions$burnIn)), ]\n  phi <- phi[seq(1, nrow(phi), by=MCMCOptions$thinning), ]\n  colMeans(phi, na.rm = T)\n}\n",
    "created" : 1467239198983.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2893526913",
    "id" : "498E47AD",
    "lastKnownWriteTime" : 1467245967,
    "path" : "~/Google Drive/Masters/Thesis/scripts/ddcrppaper/submission.code/ddclone/R/summaries.R",
    "project_path" : "R/summaries.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}