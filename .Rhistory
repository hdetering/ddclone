nMut <- length(dat$mutPrevalence)
dat <- readRDS(dataPath)
nMut <- length(dat$mutPrevalence)
data.frame(mutID=1:nMut, phi=as.vector(dat$mutPrevalence))
dat <- readRDS(dataPath)
nMut <- length(dat$mutPrevalence)
goldStandard <- data.frame(mutID=1:nMut, phi=as.vector(dat$mutPrevalence))
goldStandard
as.vector(dat$mutPrevalence)
goldStandard <- data.frame(mutID=1:nMut, clusterID=relabel.clusters(as.vector(dat$mutPrevalence)))
source('R/helper.R')
goldStandard <- data.frame(mutID=1:nMut, clusterID=relabel.clusters(as.vector(dat$mutPrevalence)))
goldStandard
source('R/helper.R')
score <- evaluate.clustering(goldStandard$clusterID, df$clusterID)
score
goldStandard <- data.frame(mutID = 1:nMut,
clusterID = relabel.clusters(as.vector(dat$mutPrevalence)),
phi = as.vector(dat$mutPrevalence))
(phiScore <- mean(abs(goldStandard$phi - df$phi)))
print(scores)
score <- data.frame(clustScore, phiScore)
goldStandard <- data.frame(mutID = 1:nMut,
clusterID = relabel.clusters(as.vector(dat$mutPrevalence)),
phi = as.vector(dat$mutPrevalence))
# Evaluate clustering
(clustScore <- evaluate.clustering(goldStandard$clusterID, df$clusterID))
# Evaluate prevalence estimates
(phiScore <- mean(abs(goldStandard$phi - df$phi)))
score <- data.frame(clustScore, phiScore)
score
score <- data.frame(clustScore, phiMeanError = phiScore)
score
write.table(t(scores), file.path(expPath, 'result-scores.csv'))
write.table(scores, file.path(expPath, 'result-scores.csv'))
source('~/Google Drive/Masters/Thesis/scripts/ddcrppaper/submission.code/ddclone/R/example.R')
devtools::load_all(".")
devtools::use_package(plyr)
devtools::use_package('plyr')
devtools::use_package('Matrix')
devtools::use_package('mcclust')
devtools::use_package('lsa')
devtools::use_package('VGAM')
devtools::use_package('vegan')
devtools::use_package('matrixStats')
devtools::load_all(".")
library(ddclone)
?dbetabinom.ab
library(ddclone)
library(VGAM)
?dbetabinom.ab
source('~/Google Drive/Masters/Thesis/scripts/ddcrppaper/ddclone/R/ddcrp-inference.R')
source('R/ddclone.R')
source('R/helper.R')
dataPath <- './data/dollo.10.48.4.f0.gl0-u.dat'
ddCloneRes <- ddclone(dataPath = dataPath,
outputPath = './output', tumourContent = 1.0,
numOfIterations = 100, thinning = 1, burnIn = 1,
seed = 1)
ddCloneRes <- ddclone(dataPath = dataPath,
outputPath = './output', tumourContent = 1.0,
numOfIterations = 100, thinning = 1, burnIn = 1,
seed = 1)
plot(1)
source('~/Google Drive/Masters/Thesis/scripts/ddcrppaper/ddclone/demo/example.R')
source('~/Google Drive/Masters/Thesis/scripts/ddcrppaper/ddclone/demo/example.R')
source('~/Google Drive/Masters/Thesis/scripts/ddcrppaper/ddclone/demo/example.R')
source('~/Google Drive/Masters/Thesis/scripts/ddcrppaper/ddclone/demo/example.R')
source('~/Google Drive/Masters/Thesis/scripts/ddcrppaper/ddclone/demo/example.R')
?plyr
?.
source('~/Google Drive/Masters/Thesis/scripts/ddcrppaper/ddclone/demo/example.R')
?logSumExp
?comp.psm
?maxpear
install.packages('roxygen')
install.packages(roxygen)
install.packages('roxygen')
install.packages('roxygen2')
library(roxygen2)
devtools::document()
source('~/Google Drive/Masters/Thesis/scripts/ddcrppaper/ddclone/demo/example.R')
source('~/Google Drive/Masters/Thesis/scripts/ddcrppaper/ddclone/demo/example.R')
?ddclone
?ddclone
devtools::document()
devtools::use_vignette()
library('rmarkdown')
install.packages('rmarkdown')
devtools::use_vignette()
devtools::use_vignette()
devtools::build_vignettes()
devtools::use_vignette('my.Rmd')
devtools::use_vignette('my')
devtools::document()
?ddclone
devtools::document()
library(xlsx)
inputPath <- '/Users/sohrab/Google Drive/Masters/Thesis/scripts/ddcrppaper/additional_files/additional_file_4_inputs_simulated.xlsx'
inputPath <- '/Users/sohrab/Google Drive/Masters/Thesis/scripts/ddcrppaper/additional_files/additional_file_4_inputs_simulated.xlsx'
res <- read.xlsx(inputPath)
res <- read.xlsx(inputPath, sheet=1)
res <- read.xlsx(inputPath, sheet='seed_1_genotypes')
res <- read.xlsx(file = inputPath, sheetName = 'seed_1_genotypes')
res <- read.xlsx(file = inputPath, sheetName = 'seed1_genotypes')
res
res <- read.xlsx(file = inputPath, sheetName = 'seed1_genotypes', row.names=T)
res
genDat <- read.xlsx(file = inputPath, sheetName = 'seed1_genotypes', row.names=T)
str(genDat)
res <- read.xlsx(file = inputPath, sheetName = 'seed_1_allele_counts', row.names=T)
bulkDat <- read.xlsx(file = inputPath, sheetName = 'seed_1_allele_counts', row.names=T)
bulkDat
bulkDat <- read.xlsx(file = inputPath, sheetName = 'seed_1_allele_counts', row.names=T)
head(bulkDat)
gsub('.+:chr(.+)', '\\1', rownames(bulkDat))
rownames(bulkDat)
rownames(bulkDat)
bulkDat
bulkDat
genDat <- read.xlsx(file = inputPath, sheetName = 'seed1_genotypes', row.names=T)
genDat
mutList <- colnames(genDat)
mutList
bulkOnlyMutList <- bulkDat$mutation_id
mutList
genDat.mutList <- colnames(genDat)
bulkMutList <- bulkDat$mutation_id
sharedMutList <- intersect(genDatMutList, bulkMutList)
genDatMutList <- colnames(genDat)
genDatMutList
bulkMutList <- bulkDat$mutation_id
bulkMutList
bulkMutList <- as.vector(bulkDat$mutation_id)
bulkMutList
sharedMutList <- intersect(genDatMutList, bulkMutList)
sharedMutList
genDat[, c(1,2,3)]
genDat <- genDat[, which(colnames(genDat) %in% sharedMutList)]
genDat
genDat <- genDat[, sharedMutList]
genDat
bulkDat <- bulkDat[sharedMutList, ]
bulkDat[sharedMutList, ]
genDat
bulkDat <- read.xlsx(file = inputPath, sheetName = 'seed_1_allele_counts', row.names=T)
bulkMutList <- as.vector(bulkDat$mutation_id)
rownames(bulkDat) <- bulkMutList
bulkDat <- bulkDat[sharedMutList, ]
bulkDat
bulkDat[c('mut43', 'mut20'), ]
stopifnot(sharedMutList == rownames(bulkDat))
mutCounts <- matrix(nrow = 2, ncol=nMut)
mutCounts[1, ] <- bulkDat$ref_counts + bulkDat$var_counts
mutCounts[2, ] <- bulkDat$var_counts
mutCounts <- matrix(nrow = 2, ncol=nMut)
mutCounts[1, ] <- bulkDat$ref_counts + bulkDat$var_counts
nMut <- length(sharedMutList)
# mutCount
mutCounts <- matrix(nrow = 2, ncol=nMut)
mutCounts[1, ] <- bulkDat$ref_counts + bulkDat$var_counts
mutCounts[2, ] <- bulkDat$var_counts
psi <- make.psi.priors(data, scheme = 'PCN')
source('R/genotype.R')
psi <- make.psi.priors(data, scheme = 'PCN')
psi <- make.psi.priors(bulkDat, scheme = 'PCN')
psi
head(bulkDat)
which(bulkDat$minor_cn > bulkDat$major_cn)
genDat
Path to a .tsv file of binary entries where rows correspond to genotypes and coloumns to mutation IDs respectively.
names(bulkDat)
colnames(bulkDat)
devtools::document()
?
make.ddclone.input
make.ddclone.input
devtools::document()
?make.ddclone.input
devtools::document()
?make.ddclone.input
devtools::document()
inputPath <- '/Users/sohrab/Google Drive/Masters/Thesis/scripts/ddcrppaper/additional_files/additional_file_4_inputs_simulated.xlsx'
genDat <- read.xlsx(file = inputPath, sheetName = 'seed1_genotypes', row.names=T)
devtools::use_data(genDat)
library(ddclone)
data(genDat)
genDat
ss <- data(genDat)
ss
bulkDat
devtools::use_data(bulkDat)
bulkDat
data(bulkDat)
readRDS('./data/genDat.rda')
read('./data/genDat.rda')
baseDir <- '/Users/sohrab/Google Drive/Masters/Thesis/scripts/improve/real.data/ddcrp.all/'
files <- list.files(baseDir, pattern = 'xenograft.real.intersected.curated.*.dat')
for (file in files) {
data <- readRDS(file)
devtools::use_data(data)
}
baseDir <- '/Users/sohrab/Google Drive/Masters/Thesis/scripts/improve/real.data/ddcrp.all/'
files <- list.files(baseDir, pattern = 'xenograft.real.intersected.curated.*.dat', full.names = T)
for (file in files) {
data <- readRDS(file)
devtools::use_data(data)
}
baseDir <- '/Users/sohrab/Google Drive/Masters/Thesis/scripts/improve/real.data/ddcrp.all/'
files <- list.files(baseDir, pattern = 'xenograft.real.intersected.curated.*.dat', full.names = T)
for (file in files) {
data <- readRDS(file)
fileName <- file_path_sans_ext(basename(file))
save(data, paste0('./data/', fileName, '.rda'))
#devtools::use_data(data)
}
??file_path_sans_ext
library(tools)
baseDir <- '/Users/sohrab/Google Drive/Masters/Thesis/scripts/improve/real.data/ddcrp.all/'
files <- list.files(baseDir, pattern = 'xenograft.real.intersected.curated.*.dat', full.names = T)
for (file in files) {
data <- readRDS(file)
fileName <- file_path_sans_ext(basename(file))
save(data, paste0('./data/', fileName, '.rda'))
#devtools::use_data(data)
}
library(tools)
baseDir <- '/Users/sohrab/Google Drive/Masters/Thesis/scripts/improve/real.data/ddcrp.all/'
files <- list.files(baseDir, pattern = 'xenograft.real.intersected.curated.*.dat', full.names = T)
for (file in files) {
data <- readRDS(file)
fileName <- file_path_sans_ext(basename(file))
save(data, file = paste0('./data/', fileName, '.rda'))
#devtools::use_data(data)
}
baseDir <- '/Users/sohrab/Google Drive/Masters/Thesis/scripts/improve/real.data/ddcrp.all/'
files <- list.files(baseDir, pattern = 'xenograft.real.intersected.curated.*.dat', full.names = T)
for (file in files) {
data <- readRDS(file)
fileName <- file_path_sans_ext(basename(file))
fileName <- gsub('xenograft.real.intersected.curated.', 'tnbc.xenograft.', fileName)
save(data, file = paste0('./data/', fileName, '.rda'))
#devtools::use_data(data)
}
baseDir <- '/Users/sohrab/Google Drive/Masters/Thesis/scripts/improve/real.data/ddcrp.all/'
files <- list.files(baseDir, pattern = 'xenograft.real.intersected.curated.*.dat', full.names = T)
for (file in files) {
data <- readRDS(file)
fileName <- file_path_sans_ext(basename(file))
fileName <- gsub('xenograft.real.intersected.curated.', 'tnbc.xenograft.', fileName)
fileName <- gsub('f0.gl0.', '', fileName)
save(data, file = paste0('./data/', fileName, '.rda'))
#devtools::use_data(data)
}
baseDir <- '/Users/sohrab/Google Drive/Masters/Thesis/scripts/improve/real.data/ddcrp.all/'
files <- list.files(baseDir, pattern = 'xenograft.real.intersected.curated.*.dat', full.names = T)
for (file in files) {
# file = files[[1]]
data <- readRDS(file)
fileName <- file_path_sans_ext(basename(file))
fileName <- gsub('xenograft.real.intersected.curated.', 'tnbc.xenograft.', fileName)
fileName <- gsub('.f0.gl0', '', fileName)
save(data, file = paste0('./data/', fileName, '.rda'))
#devtools::use_data(data)
}
load(tnbc.xenograft.SA494.T)
data(tnbc.xenograft.SA494.T)
tnbc.xenograft.SA494.T)
tnbc.xenograft.SA494.T
ss <- data(tnbc.xenograft.SA494.T))
ss <- data(tnbc.xenograft.SA494.T)
ss
ls
ls()
library(ddclone)
data(tnbc.xenograft.SA494.T)
tnbc.xenograft.SA494.T
system.file("extdata", "dollo.10.48.4.f0.gl0-u.dat", package = "testdat")
system.file("extdata", "dollo.10.48.4.f0.gl0-u.dat", package = "ddclone")
system.file("inst/extdata", "dollo.10.48.4.f0.gl0-u.dat", package = "ddclone")
system.file("inst/extdata", package = "ddclone")
system.file("extdata", package = "ddclone")
devtools::load_all(".")
system.file("inst/extdata", "dollo.10.48.4.f0.gl0-u.dat", package = "ddclone")
system.file("extdata", package = "ddclone")
library(dddClone)
library(ddclone)
system.file("extdata", package = "ddclone")
system.file("data", package = "ddclone")
system.file("inst", package = "ddclone")
system.file("inst/extdata", package = "ddclone")
system.file("extdata", package = "ddclone")
system.file("extdata", "dollo.10.48.4.f0.gl0-u.dat", package = "ddclone")
system.file("inst/extdata", "dollo.10.48.4.f0.gl0-u.dat", package = "ddclone")
system.file("extdata", "dollo.10.48.4.f0.gl0-u.dat", package = "ddclone")
readRDS(system.file("extdata", "dollo.10.48.4.f0.gl0-u.dat", package = "ddclone"))
data("tnbc.xenograft.SA494.X4")
ss <- data("tnbc.xenograft.SA494.X4")
ss
tnbc.xenograft.SA494.X4
"tnbc.xenograft.SA494.X4"
tnbc.xenograft.SA494.X4
`tnbc.xenograft.SA494.X4`
?data
ss <- data("data/tnbc.xenograft.SA494.X4.rda")
data('tnbc.xenograft.SA494.T.rda')
data('tnbc.xenograft.SA494.T')
rm(list=ls())
library(ddclone)
data('tnbc.xenograft.SA494.T')
data(tnbc.xenograft.SA494.T)
data(tnbc.xenograft.SA494.T, 'myData')
data(tnbc.xenograft.SA494.T)
ss <- data(tnbc.xenograft.SA494.T)
ss
data(ss=tnbc.xenograft.SA494.T)
ss
?Data
data()
devtools::document()
source('~/Google Drive/Masters/Thesis/scripts/ddcrppaper/ddclone/R/data.R')
devtools::document()
ls data
devtools::document()
source('~/Google Drive/Masters/Thesis/scripts/ddcrppaper/ddclone/R/data.R')
devtools::document()
?save
ss <- load('/Users/sohrab/Google Drive/Masters/Thesis/scripts/ddcrppaper/ddclone/data/tnbc.xenograft.SA494.T.rda')
ss
rm(list=ls())
ss <- load('/Users/sohrab/Google Drive/Masters/Thesis/scripts/ddcrppaper/ddclone/data/tnbc.xenograft.SA494.T.rda')
devtools::use_data(data)
data()
devtools::document()
devtools::document()
data()
library(tools)
baseDir <- '/Users/sohrab/Google Drive/Masters/Thesis/scripts/improve/real.data/ddcrp.all/'
files <- list.files(baseDir, pattern = 'xenograft.real.intersected.curated.*.dat', full.names = T)
for (file in files) {
# file = files[[1]]
data <- readRDS(file)
fileName <- file_path_sans_ext(basename(file))
fileName <- gsub('xenograft.real.intersected.curated.', 'tnbc.xenograft.', fileName)
fileName <- gsub('.f0.gl0', '', fileName)
assign(fileName, data)
#save(fileName, file = paste0('./data/', fileName, '.rda'))
devtools::use_data(fileName)
}
rm(list=ls())
library(tools)
baseDir <- '/Users/sohrab/Google Drive/Masters/Thesis/scripts/improve/real.data/ddcrp.all/'
files <- list.files(baseDir, pattern = 'xenograft.real.intersected.curated.*.dat', full.names = T)
for (file in files) {
# file = files[[1]]
data <- readRDS(file)
fileName <- file_path_sans_ext(basename(file))
fileName <- gsub('xenograft.real.intersected.curated.', 'tnbc.xenograft.', fileName)
fileName <- gsub('.f0.gl0', '', fileName)
assign(fileName, data)
#save(fileName, file = paste0('./data/', fileName, '.rda'))
devtools::use_data(fileName)
}
rm(list=ls())
library(tools)
baseDir <- '/Users/sohrab/Google Drive/Masters/Thesis/scripts/improve/real.data/ddcrp.all/'
files <- list.files(baseDir, pattern = 'xenograft.real.intersected.curated.*.dat', full.names = T)
for (file in files) {
# file = files[[1]]
data <- readRDS(file)
fileName <- file_path_sans_ext(basename(file))
fileName <- gsub('xenograft.real.intersected.curated.', 'tnbc.xenograft.', fileName)
fileName <- gsub('.f0.gl0', '', fileName)
assign(fileName, data)
#save(fileName, file = paste0('./data/', fileName, '.rda'))
#devtools::use_data()
}
theNames <- list()
for (file in files) {
# file = files[[1]]
data <- readRDS(file)
fileName <- file_path_sans_ext(basename(file))
fileName <- gsub('xenograft.real.intersected.curated.', 'tnbc.xenograft.', fileName)
fileName <- gsub('.f0.gl0', '', fileName)
assign(fileName, data)
#save(fileName, file = paste0('./data/', fileName, '.rda'))
#devtools::use_data()
theNames <- append(theNames, fileName)
}
for (i in theNames) {
cat(sprintf('devtools::use_data(%s)', i))
}
for (i in theNames) {
cat(sprintf('devtools::use_data(%s)', i))
cat('\n')
}
devtools::use_data(tnbc.xenograft.SA494.T)
devtools::use_data(tnbc.xenograft.SA494.X4)
devtools::use_data(tnbc.xenograft.SA501.X1)
devtools::use_data(tnbc.xenograft.SA501.X2)
devtools::use_data(tnbc.xenograft.SA501.X4)
devtools::use_data(tnbc.xenograft.SA501.X5)
data("tnbc.xenograft.SA494.T")
rm(ls=list())
rm(list=ls())
library(ddclone)
data("tnbc.xenograft.SA494.T")
data()
devtools::document()
??tnbc.xenograft.SA494.T
?tnbc.xenograft.SA494.T
data()
help(tnbc.xenograft.SA494.T)
library(ddclone)
ddClone
data(package='ddclone')
baseDir <- '/Users/sohrab/Google Drive/Masters/Thesis/scripts/improve/simulated.data'
dataIDs <- name.utils.get.all.normal.dollo.data.ids()
theNames <- list()
for (i in dataIDs) {
# i = dataIDs[[1]]
s <- readRDS(file.path(baseDir, i))
genMat <- s$trueMutMatrix
colnames(genMat) <- paste0('mut', colnames(genMat))
s$filteredMutMatrix <- gneMat
s$trueMutMatrix <- gneMat
seed <- name.utils.get.seed(i)
fileName <- gsub('-u.dat', '', i)
assign(fileName, s)
theNames <- append(theNames, fileName)
}
baseDir <- '/Users/sohrab/Google Drive/Masters/Thesis/scripts/improve/simulated.data'
dataIDs <- unlist(lapply(0:9, function(seed) sprintf('dollo.10.48.%i.f%i.gl%i-u.dat', seed, 0, 0)))
theNames <- list()
for (i in dataIDs) {
# i = dataIDs[[1]]
s <- readRDS(file.path(baseDir, i))
genMat <- s$trueMutMatrix
colnames(genMat) <- paste0('mut', colnames(genMat))
s$filteredMutMatrix <- gneMat
s$trueMutMatrix <- gneMat
seed <- name.utils.get.seed(i)
fileName <- gsub('-u.dat', '', i)
assign(fileName, s)
theNames <- append(theNames, fileName)
}
baseDir <- '/Users/sohrab/Google Drive/Masters/Thesis/scripts/improve/simulated.data'
dataIDs <- unlist(lapply(0:9, function(seed) sprintf('dollo.10.48.%i.f%i.gl%i-u.dat', seed, 0, 0)))
theNames <- list()
i = dataIDs[[1]]
s <- readRDS(file.path(baseDir, i))
genMat <- s$trueMutMatrix
colnames(genMat) <- paste0('mut', colnames(genMat))
s$filteredMutMatrix <- gneMat
baseDir <- '/Users/sohrab/Google Drive/Masters/Thesis/scripts/improve/simulated.data'
dataIDs <- unlist(lapply(0:9, function(seed) sprintf('dollo.10.48.%i.f%i.gl%i-u.dat', seed, 0, 0)))
theNames <- list()
for (i in dataIDs) {
# i = dataIDs[[1]]
s <- readRDS(file.path(baseDir, i))
genMat <- s$trueMutMatrix
colnames(genMat) <- paste0('mut', colnames(genMat))
s$filteredMutMatrix <- genMat
s$trueMutMatrix <- genMat
seed <- name.utils.get.seed(i)
fileName <- gsub('-u.dat', '', i)
assign(fileName, s)
theNames <- append(theNames, fileName)
}
for (i in theNames) {
cat(sprintf('devtools::use_data(%s)', i))
cat('\n')
}
baseDir <- '/Users/sohrab/Google Drive/Masters/Thesis/scripts/improve/simulated.data'
dataIDs <- unlist(lapply(0:9, function(seed) sprintf('dollo.10.48.%i.f%i.gl%i-u.dat', seed, 0, 0)))
theNames <- list()
for (i in dataIDs) {
# i = dataIDs[[1]]
s <- readRDS(file.path(baseDir, i))
genMat <- s$trueMutMatrix
colnames(genMat) <- paste0('mut', colnames(genMat))
s$filteredMutMatrix <- genMat
s$trueMutMatrix <- genMat
fileName <- gsub('-u.dat', '', i)
assign(fileName, s)
theNames <- append(theNames, fileName)
}
for (i in theNames) {
cat(sprintf('devtools::use_data(%s)', i))
cat('\n')
}
devtools::use_data(dollo.10.48.0.f0.gl0)
devtools::use_data(dollo.10.48.1.f0.gl0)
devtools::use_data(dollo.10.48.2.f0.gl0)
devtools::use_data(dollo.10.48.3.f0.gl0)
devtools::use_data(dollo.10.48.4.f0.gl0)
devtools::use_data(dollo.10.48.5.f0.gl0)
devtools::use_data(dollo.10.48.6.f0.gl0)
devtools::use_data(dollo.10.48.7.f0.gl0)
devtools::use_data(dollo.10.48.8.f0.gl0)
devtools::use_data(dollo.10.48.9.f0.gl0)
?use_data_raw()
devtools
devtools::use_data_raw()
system.file("extdata", "inputs_simulated.xlsx", package = "ddclone")
system.file("extdata", "inputs_simulated", package = "ddclone")
library(ddclone)
system.file("extdata", "inputs_simulated.xlsx", package = "ddclone")
system.file("extdata", package = "ddclone")
list.files(system.file("extdata", package = "ddclone"))
devtools::load_all(".")
rm(list=ls())
